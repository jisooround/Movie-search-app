{"mappings":"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","sources":["js/getDetail.js","js/renderDetail.js","js/detail.js","js/renderMovies.js","js/getMovies.js","js/main.js"],"sourcesContent":["    // 영화 상세 내용 불러오기\n    export default async function getDetail(id = '') {\n      return new Promise((resolve, reject) => {\n        fetch(`https://omdbapi.com/?apikey=7035c60c&i=${id}&plot=sho`)\n        .then(res => res.json())\n        .then(res => resolve(res))\n        .then(json => {\n          if(json.Response === 'False'){\n          reject(json.Error)\n          }\n          resolve(json)\n          })\n          .catch(error => {\n          reject(error)\n      })\n    })\n  };","export default function renderDetail(details) {\n  const bgEl = document.getElementById('detail-bg');\n  const posterEl = document.getElementById('img-wrap');\n  document.getElementById('detail-title').innerText = `${details.Title}`;\n  document.getElementById('detail-released').innerText = `${details.Released}`;\n  document.getElementById('detail-plot').innerText = `${details.Plot}`;\n  document.getElementById('actors').innerText = `${details.Actors}`;\n  document.getElementById('director').innerText = `${details.Director}`;\n  document.getElementById('genre').innerText = `${details.Genre}`;\n  posterEl.style.backgroundImage = `url(${details.Poster})`;\n  bgEl.style.backgroundImage = `url(${details.Poster})`;\n  \n  if(`${details.Poster}` === \"N/A\"){\n    posterEl.style.backgroundImage = `url(https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png)`\n  };\n\n  const ratingsInfo = document.getElementById('ratings-info');\n  ratingsInfo.innerHTML ='';\n\n  // 평점 제공사와 결과 함께 보여주기\n  for(let i = 0; i < details.Ratings.length; i++){\n    const ratingEl = document.createElement('div');\n    ratingEl.className = 'rating';\n    const logoEl = document.createElement('img');\n    logoEl.className = 'logo';\n    const resultEl = document.createElement('p');\n    resultEl.className = 'result';\n\n    logoEl.src = '/' + `${details.Ratings[i].Source}` + '.png';\n    resultEl.textContent = `${details.Ratings[i].Value}`;\n\n    ratingEl.append(logoEl, resultEl);\n    ratingsInfo.append(ratingEl);\n  }\n\n  // 제공된 평점이 없을 경우 '결과 없음' 메세지\n  if(details.Ratings.length === 0){\n    const ratingEl = document.createElement('div');\n    ratingEl.className = 'rating';\n    const logoEl = document.createElement('img');\n    logoEl.className = 'logo';\n    const resultEl = document.createElement('p');\n    resultEl.className = 'result';\n  \n    resultEl.innerHTML = 'No rating results provided.';\n\n    ratingEl.append(resultEl);\n    ratingsInfo.append(ratingEl);\n  }\n\n  window.scroll({top: document.body.scrollHeight, left: 0, behavior: 'smooth'});\n};","import getDetail from \"./getDetail.js\";\nimport renderDetail from \"./renderDetail.js\";\n\nexport default async function detail(movie) {\n        const id = movie.imdbID;\n          try {\n            const details = await getDetail(id);\n            // 콘솔 확인\n            // console.log(details);\n            // console.log('detail : '+id);\n            renderDetail(details);\n          } catch (error) {\n            console.log(error)\n          }\n      };","import detail from \"./detail.js\";\n\nexport default function renderMovies(movies) {\n  for(let movie of movies){\n    const movieEl = document.createElement('div');\n    movieEl.className = 'group';\n    const imgDivEl = document.createElement('div');\n    imgDivEl.className = 'group__imgdiv';\n    const infoDivEl = document.createElement('div');\n    infoDivEl.className = 'group__infodiv';\n    const titleEl = document.createElement('h4');\n    titleEl.className = 'group__infodiv__title';\n    const yearEl = document.createElement('p');\n    yearEl.className = 'group__infodiv__year';\n    const detailEl = document.createElement('div');\n    detailEl.className = 'group__infodiv__detail'\n    detailEl.innerText = '+'\n\n    imgDivEl.style.backgroundImage = `url(${movie.Poster})`;\n    titleEl.innerText = `${movie.Title}`;\n    yearEl.innerText = `${movie.Year}`;\n\n    if(`${movie.Poster}` === \"N/A\"){\n      imgDivEl.style.backgroundImage = `url(https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png)`\n    };\n\n    // detail 버튼 클릭 시 detail 정보 불러오기\n    detailEl.addEventListener('click', () => {\n      detail(movie);\n      document.querySelector('#detail-container').classList.add('display');\n      document.querySelector('.message').classList.add('none');\n    })\n\n    infoDivEl.appendChild(titleEl);\n    infoDivEl.appendChild(yearEl);\n    infoDivEl.appendChild(detailEl);\n    movieEl.appendChild(imgDivEl);\n    movieEl.appendChild(infoDivEl);\n    movieFeed.appendChild(movieEl);\n  };\n}","// 영화 검색 결과 불러오기\nexport default async function getMovies(title = '', page = 1, type = '', year = '' ) {\n  return new Promise((resolve, reject) => {\n      fetch(`https://omdbapi.com/?apikey=7035c60c&s=${title}&page=${page}&type=${type}&y=${year}`)\n        .then(res => res.json())\n        .then(res => resolve(res))\n        .then(json => {\n          if(json.Response === 'False') {\n            reject(json.Error)\n          }\n          resolve(json)\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n};","import renderMovies from \"./renderMovies.js\";\nimport getMovies from \"./getMovies.js\";\n\nconst yearEl = document.getElementById('year-select');\nconst inputEl = document.getElementById('search-input');\nconst buttonEl = document.getElementById('search-btn');\nconst moreBtnEl = document.getElementById('more-btn');\nconst movieFeed = document.getElementById('movieFeed');\nconst spans = document.querySelectorAll('span');\nconst sections = document.getElementsByClassName('section');\nconst introTop = sections[0].offsetTop;\nconst mainTop = sections[1].offsetTop;\nconst errorEl = document.getElementById('error');\nconst searchMessageEl = document.getElementById('search-message');\nconst totalMessage = document.getElementById('total-message-text')\nlet page = 1;\nyearList();\n\n// 스크롤 이벤트\nspans[0].onclick = function() {\n  window.scroll({top:introTop, behavior: 'smooth'});\n}\nspans[1].onclick = function() {\n  window.scroll({top:introTop, behavior: 'smooth'});\n}\nspans[2].onclick = function() {\n  window.scroll({top:mainTop, behavior: 'smooth'});\n}\nspans[3].onclick = function() {\n  window.scroll({top: document.body.scrollHeight, left: 0, behavior: 'smooth'});\n}\nspans[4].onclick = function() {\n  window.scroll({top:mainTop, behavior: 'smooth'});\n}\n\n// 최초 검색\nbuttonEl.addEventListener('click', searchMoviesFirst);\nasync function searchMoviesFirst() {\n  movieFeed.innerHTML = '';\n  searchMessageEl.classList.add('none');\n  \n  const year = (yearEl.options[yearEl.selectedIndex].value);\n  const typeEl = document.getElementById('type-select');\n  const type = (typeEl.options[typeEl.selectedIndex].value);\n  const countEl = document.getElementById('count-select');\n  page = (countEl.options[countEl.selectedIndex].value);\n\n  const title = inputEl.value;\n  totalMessage.classList.add('none');\n  // 콘솔 확인\n  // console.log(title);\n  // console.log(type);\n  // console.log(year);\n\n  for(let i = 1; i <= page; i++){\n    try {\n      const { Search: movies, totalResults } = await getMovies(title, i, type, year);\n      const total = Math.ceil(Number(totalResults) / 10);\n      renderMovies(movies);\n      renderMoreBtn(totalResults);\n      errorEl.classList.remove('display');\n      // 콘솔 확인\n      // console.log(total);\n      // console.log(totalResults);\n\n      // 결과가 요청하는 페이지보다 작다면 break\n      if(total < page) {\n        totalMessage.classList.remove('none');\n        totalMessage.textContent = `💬 The search results are  ${totalResults}.`;\n        break;\n      }\n    } catch (error) {\n      moreBtnEl.classList.remove('active');\n      errorEl.classList.add('display');\n      // console.log(error);\n    }\n  }\n  return page;\n};\n// input창에서 enter키 입력 시 search 버튼 클릭 기능\ninputEl.addEventListener('keyup', searchEnter);\nfunction searchEnter(event){\n  if(event.keyCode === 13){\n    searchMoviesFirst();\n  }\n}\n\n// 더보기 버튼 클릭시 page수 추가하여 요청\nmoreBtnEl.addEventListener('click', async() => {\n  page++;\n  const title = inputEl.value;\n  // 콘솔 확인\n  // console.log(page);\n  // console.log(title);\n  try {\n    const { Search: movies, totalResults } = await getMovies(title, page);\n    renderMovies(movies);\n    renderMoreBtn(totalResults);\n    // 콘솔 확인\n    // console.log(movies);\n  } catch (error) {\n    console.log(error);\n  }\n});\n\n// 남은 결과가 있을 때 버튼 노출\nfunction renderMoreBtn(totalResults) {\n  const total = Math.ceil(Number(totalResults) / 10);\n  if (page < total) {\n    moreBtnEl.classList.add('active');\n  } else {\n    moreBtnEl.classList.remove('active');\n  }\n};\n\n// 년도 리스트 생성\nfunction yearList() {\n  let date = new Date();\n  let currentYear = date.getFullYear();\n  for(let i = currentYear; i >= 1980; i--){\n    const yearLiEl = document.createElement('option');\n    yearLiEl.classList.add('year-option');\n    yearLiEl.innerText = i;\n    yearLiEl.value = `${i}`;\n    yearEl.appendChild(yearLiEl);\n    // 콘솔 확인\n    // console.log(yearLiEl.innerHTML);\n    // console.log(yearLiEl.value);\n  }\n};\n"],"names":["async","$fa19c2c7e2966d5f$export$2e2bcd8739ae039","id","Promise","resolve","reject","fetch","then","res","json","Response","Error","catch","error","$a07c2829e5c41540$export$2e2bcd8739ae039","details","bgEl","document","getElementById","posterEl","innerText","Title","Released","Plot","Actors","Director","Genre","style","backgroundImage","Poster","ratingsInfo","innerHTML","i","Ratings","length","ratingEl","createElement","className","logoEl","resultEl","src","Source","textContent","Value","append","ratingEl1","resultEl1","window","scroll","top","body","scrollHeight","left","behavior","$1999ee283ec98360$export$2e2bcd8739ae039","movie","imdbID","console","log","$5e6e2fe5b51abc71$export$2e2bcd8739ae039","movies","movieEl","imgDivEl","infoDivEl","titleEl","yearEl","detailEl","Year","addEventListener","querySelector","classList","add","appendChild","movieFeed","$4149f49e4262c4f0$export$2e2bcd8739ae039","title","page","type","year","$77ac944da51b7354$var$yearEl","$77ac944da51b7354$var$inputEl","$77ac944da51b7354$var$buttonEl","$77ac944da51b7354$var$moreBtnEl","$77ac944da51b7354$var$movieFeed","$77ac944da51b7354$var$spans","querySelectorAll","$77ac944da51b7354$var$sections","getElementsByClassName","$77ac944da51b7354$var$introTop","offsetTop","$77ac944da51b7354$var$mainTop","$77ac944da51b7354$var$errorEl","$77ac944da51b7354$var$searchMessageEl","$77ac944da51b7354$var$totalMessage","$77ac944da51b7354$var$page","$77ac944da51b7354$var$searchMoviesFirst","options","selectedIndex","value","typeEl","countEl","Search","totalResults","total","Math","ceil","Number","$77ac944da51b7354$var$renderMoreBtn","remove","Date","getFullYear","yearLiEl","$77ac944da51b7354$var$yearList","onclick","event","keyCode"],"version":3,"file":"index.d5babe5d.js.map"}